# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches:
      - master
      - develop
      - 'release/*'
      - 'fix/*'
      - 'poc/*'
  pull_request:
    branches:
      - master
      - develop
      - 'release/*'
      - 'fix/*'
      - 'poc/*'

jobs:
  build-and-test:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      # Ensure gradlew has executable permissions
      - name: Set execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Build with Gradle Wrapper
        run: ./gradlew build
      - name: Run Jacoco Test Coverage Report
        run: ./gradlew jacocoTestReport

      - name: Upload Jacoco Coverage Report
        uses: actions/upload-artifact@v3
        with:
            name: jacoco-report
            path: build/reports/jacoco/test/html
    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
        with:
         gradle-version: '8.11.1'

      - name: Build with Gradle 8.11.1
        run: gradle build

  generate-changelog:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensure full history is available for changelog generation

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Conventional Changelog CLI
        run: npm install -g conventional-changelog-cli

      - name: Generate new CHANGELOG.md
        run: conventional-changelog -p angular -i CHANGELOG.md -s -r 0

      - name: Commit and Push new CHANGELOG
        run: |
          git config user.name "KamilAd"
          git config user.email "action@github.com"
          if git diff --quiet CHANGELOG.md; then
          echo "No changes to commit in CHANGELOG.md"
          else
          git add CHANGELOG.md
          git commit -m "chore: update changelog"
          git push
          fi